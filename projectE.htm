<!DOCTYPE html>
<html lang="en-US">
<head>
	<title>Breadth of Programming</title>
	<link rel="stylesheet" type="text/css" href="elementFormatStyle.css">
	<meta charset="UTF-8">
</head>
<body>
	<header id="header">
		<div class="content">
			<img src="profile.jpg" alt="Dan Rehberg">
			<h1>Portfolio: Scene Graphs</h1>
		</div>
	</header>
	<section id="overview">
		<div class="content">
		<img src="sceneGraphAlt.png" alt="Dividing Space">
		</div>
	</section>
	<nav id="navigation">
		<div class="content">
		<ul>
			<li>
				<a href="index.htm">Home</a>
			</li>
			<li>
				<a href="projects.htm">Projects</a>
			</li>
			<li>
				<a href="#">About</a>
			</li>
		</ul>
		</div>
	</nav>
	<div class="clear"></div>
	
	<aside id="sidebar">
		<p>The representation of how space is occupied in software can, and should, vary by application needs. Is the space continuous with infinitesimal occupants, continuous with discrete occupants (uniform or irregular), or sparse - among many other options. These are useful characteristics to question to approach the right container and data structure pattern for efficient creation and traversal. I am sharing this section under the name <strong><em>scene graph</em></strong> as I like the phrase and have met plenty of people that have not heard its use. Yet, the concepts of scene graphs are highly applicable to being tasked with describing how space is filled, and are worth sharing for many applications. Whether there exists an intuitive description of the space of a simulation which the data structure incapsulates, or if an accelerated means of traversal is merely desired for arbitrarily changing a space of <em>"stuff"</em>.</p>
	</aside>
	<section id="mainContent">
		<div class="presentation">
			<div class="videoContainer">
				<a class="projectLink" href="EnhancedSceneGraph.htm">
					<img src="enhancedBVH.png" alt="Bounding Volume Hierarchy">
					<p class="description">For sparse data structures, the use of a morton code to describe the locality of a position in a single scalar value is rather exciting. Other practical representations of space exist, but the Z-order curve offered in morton codes provides a practical basis to bisect an entire volume of space into subsequent halves to explore for information. This particular usage of a <em>bounding volume hierarchy (BVH)</em> was based on a parallel BVH paper (translated from GPU presented usage to an optimal CPU version), but has been tailored to promote scalability of the applicable amount of space for which <strong>stuff</strong> can exist. In particular, this is running in a highly parallelizable system used for discrete simulation and interactive virtual worlds. Under the conditions that both of these provide, enhancing the usage of this BVH is based on the constraints of floating point precision and the total number of bits being used to hold a morton code value. 
					</p>
				</a>
			</div>
			<p>Bounded by Morton Codes: Enhancing the Total Representable Space</p>
		</div>
	</section>

	<div class="clear"></div>

	<footer id="footer">
		<p>Copyright &copy; 2020 Daniel Rehberg All Rights Reserved</p>
	</footer>
</body>
</html>